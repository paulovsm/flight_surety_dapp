{
  "contractName": "FlightSuretyData",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "isOperational",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "mode",
          "type": "bool"
        }
      ],
      "name": "setOperatingStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAirline",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditInsurees",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditInsurees\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperational\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAirline\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"mode\",\"type\":\"bool\"}],\"name\":\"setOperatingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buy()\":{\"details\":\"Buy insurance for a flight\"},\"constructor\":{\"details\":\"Constructor      The deploying account becomes contractOwner\"},\"creditInsurees()\":{\"details\":\"Credits payouts to insurees\"},\"fund()\":{\"details\":\"Initial funding for the insurance. Unless there are too many delayed flights      resulting in insurance payouts, the contract should be self-sustaining\"},\"isOperational()\":{\"details\":\"Get operating status of contract\",\"returns\":{\"_0\":\"A bool that is the current operating status\"}},\"pay()\":{\"details\":\"Transfers eligible payout funds to insuree\"},\"registerAirline()\":{\"details\":\"Add an airline to the registration queue      Can only be called from FlightSuretyApp contract\"},\"setOperatingStatus(bool)\":{\"details\":\"Sets contract operations on/off When operational mode is disabled, all write transactions except for this one will fail\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FlightSuretyData.sol\":\"FlightSuretyData\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/FlightSuretyData.sol\":{\"keccak256\":\"0x317cf0a2d4ba2c48e16bc3dc6b7c7035dfd836d4e3a909d932be44451a981177\",\"urls\":[\"bzz-raw://8fbde2c5b4d9373df3e54b307fab1de8280d3eeb280cb11b5de8b552a739be34\",\"dweb:/ipfs/QmREdUUeJV6a8XsJgmUpxkTvS9qZUK1fb78M7JZvhWYU7e\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600060146101000a81548160ff02191690831515021790555034801561002b57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103348061007b6000396000f3fe6080604052600436106100705760003560e01c806363e29a3f1161004e57806363e29a3f146100cc578063a6f2ae3a146100e3578063b60d4288146100ed578063cd905dff146100f757610070565b8063110466ed146100755780631b9265b81461009e57806336cee484146100b5575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061022a565b610122565b005b3480156100aa57600080fd5b506100b36101cd565b005b3480156100c157600080fd5b506100ca6101cf565b005b3480156100d857600080fd5b506100e16101d1565b005b6100eb6101d3565b005b6100f56101d5565b005b34801561010357600080fd5b5061010c6101d7565b6040516101199190610266565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a7906102de565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b565b565b565b565b565b60008060149054906101000a900460ff16905090565b600080fd5b60008115159050919050565b610207816101f2565b811461021257600080fd5b50565b600081359050610224816101fe565b92915050565b6000602082840312156102405761023f6101ed565b5b600061024e84828501610215565b91505092915050565b610260816101f2565b82525050565b600060208201905061027b6000830184610257565b92915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420636f6e7472616374206f776e657200000000600082015250565b60006102c8601c83610281565b91506102d382610292565b602082019050919050565b600060208201905081810360008301526102f7816102bb565b905091905056fea2646970667358221220e3e0e01cc3b1eb2d012296694c99045ca8235777c34e9d8e57d7325867ffbf9664736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c806363e29a3f1161004e57806363e29a3f146100cc578063a6f2ae3a146100e3578063b60d4288146100ed578063cd905dff146100f757610070565b8063110466ed146100755780631b9265b81461009e57806336cee484146100b5575b600080fd5b34801561008157600080fd5b5061009c6004803603810190610097919061022a565b610122565b005b3480156100aa57600080fd5b506100b36101cd565b005b3480156100c157600080fd5b506100ca6101cf565b005b3480156100d857600080fd5b506100e16101d1565b005b6100eb6101d3565b005b6100f56101d5565b005b34801561010357600080fd5b5061010c6101d7565b6040516101199190610266565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a7906102de565b60405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b565b565b565b565b565b60008060149054906101000a900460ff16905090565b600080fd5b60008115159050919050565b610207816101f2565b811461021257600080fd5b50565b600081359050610224816101fe565b92915050565b6000602082840312156102405761023f6101ed565b5b600061024e84828501610215565b91505092915050565b610260816101f2565b82525050565b600060208201905061027b6000830184610257565b92915050565b600082825260208201905092915050565b7f43616c6c6572206973206e6f7420636f6e7472616374206f776e657200000000600082015250565b60006102c8601c83610281565b91506102d382610292565b602082019050919050565b600060208201905081810360008301526102f7816102bb565b905091905056fea2646970667358221220e3e0e01cc3b1eb2d012296694c99045ca8235777c34e9d8e57d7325867ffbf9664736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2504:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:4",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:4",
                "type": ""
              }
            ],
            "src": "7:75:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:4"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:4",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:4"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "376:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "386:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "411:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "404:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "404:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "397:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "386:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "358:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "368:7:4",
                "type": ""
              }
            ],
            "src": "334:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:76:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "524:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "533:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "536:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "526:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "526:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "526:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "493:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "515:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "500:14:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "500:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "490:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "490:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "483:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "480:60:4"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "463:5:4",
                "type": ""
              }
            ],
            "src": "430:116:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "601:84:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "611:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "633:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "620:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "620:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "611:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "673:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "649:23:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "649:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "649:30:4"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "579:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "587:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "595:5:4",
                "type": ""
              }
            ],
            "src": "552:133:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "754:260:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "800:83:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "802:77:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "802:79:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "802:79:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "775:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "784:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "771:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "771:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "796:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "767:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "764:119:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "893:114:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "908:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "922:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "912:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "937:60:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "969:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "980:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "965:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "965:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "989:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "947:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "947:50:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "937:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "724:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "735:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "747:6:4",
                "type": ""
              }
            ],
            "src": "691:323:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1079:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1096:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1116:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1101:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1101:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1089:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1089:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1089:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1067:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1074:3:4",
                "type": ""
              }
            ],
            "src": "1020:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1227:118:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1237:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1249:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1260:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1245:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1245:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1237:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1311:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1324:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1335:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1320:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1320:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1273:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1273:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1273:65:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1199:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1211:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1222:4:4",
                "type": ""
              }
            ],
            "src": "1135:210:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1447:73:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1464:3:4"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1469:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1457:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1457:19:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1457:19:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1485:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1504:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1509:4:4",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1500:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1500:14:4"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1485:11:4"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1419:3:4",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1424:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1435:11:4",
                "type": ""
              }
            ],
            "src": "1351:169:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1632:72:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1654:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1662:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1650:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1650:14:4"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420636f6e7472616374206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1666:30:4",
                        "type": "",
                        "value": "Caller is not contract owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1643:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1643:54:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1643:54:4"
                }
              ]
            },
            "name": "store_literal_in_memory_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1624:6:4",
                "type": ""
              }
            ],
            "src": "1526:178:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1856:220:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1866:74:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1932:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1937:2:4",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1873:58:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1873:67:4"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1866:3:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2038:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                      "nodeType": "YulIdentifier",
                      "src": "1949:88:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:93:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1949:93:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2051:19:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2062:3:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2067:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2058:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:12:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2051:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1844:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1852:3:4",
                "type": ""
              }
            ],
            "src": "1710:366:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2253:248:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2263:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2275:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2286:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2271:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2271:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2263:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2310:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2321:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2306:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2306:17:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2329:4:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2335:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2325:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2325:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2299:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2299:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2299:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2355:139:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2489:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2363:124:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2363:131:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2355:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2233:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2248:4:4",
                "type": ""
              }
            ],
            "src": "2082:419:4"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not contract owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "85:5682:2:-:0;;;582:4;555:31;;;;;;;;;;;;;;;;;;;;1081:168;;;;;;;;;;1232:10;1216:13;;:26;;;;;;;;;;;;;;;;;;85:5682;;;;;;",
  "deployedSourceMap": "85:5682:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3176:257;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4628:154;;;;;;;;;;;;;:::i;:::-;;4358:181;;;;;;;;;;;;;:::i;:::-;;3872:169;;;;;;;;;;;;;:::i;:::-;;4109:187;;;:::i;:::-;;4981:159;;;:::i;:::-;;2829:178;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3176:257;2332:13;;;;;;;;;;2318:27;;:10;:27;;;2310:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3422:4:::1;3408:11;;:18;;;;;;;;;;;;;;;;;;3176:257:::0;:::o;4628:154::-;:::o;4358:181::-;:::o;3872:169::-;:::o;4109:187::-;:::o;4981:159::-;:::o;2829:178::-;2961:4;2989:11;;;;;;;;;;;2982:18;;2829:178;:::o;88:117:4:-;197:1;194;187:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:109::-;1101:21;1116:5;1101:21;:::i;:::-;1096:3;1089:34;1020:109;;:::o;1135:210::-;1222:4;1260:2;1249:9;1245:18;1237:26;;1273:65;1335:1;1324:9;1320:17;1311:6;1273:65;:::i;:::-;1135:210;;;;:::o;1351:169::-;1435:11;1469:6;1464:3;1457:19;1509:4;1504:3;1500:14;1485:29;;1351:169;;;;:::o;1526:178::-;1666:30;1662:1;1654:6;1650:14;1643:54;1526:178;:::o;1710:366::-;1852:3;1873:67;1937:2;1932:3;1873:67;:::i;:::-;1866:74;;1949:93;2038:3;1949:93;:::i;:::-;2067:2;2062:3;2058:12;2051:19;;1710:366;;;:::o;2082:419::-;2248:4;2286:2;2275:9;2271:18;2263:26;;2335:9;2329:4;2325:20;2321:1;2310:9;2306:17;2299:47;2363:131;2489:4;2363:131;:::i;:::-;2355:139;;2082:419;;;:::o",
  "source": "pragma solidity ^0.8.15;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract FlightSuretyData {\n    using SafeMath for uint256;\n\n    /********************************************************************************************/\n    /*                                       DATA VARIABLES                                     */\n    /********************************************************************************************/\n\n    address private contractOwner;                                      // Account used to deploy contract\n    bool private operational = true;                                    // Blocks all state changes throughout the contract if false\n\n    /********************************************************************************************/\n    /*                                       EVENT DEFINITIONS                                  */\n    /********************************************************************************************/\n\n\n    /**\n    * @dev Constructor\n    *      The deploying account becomes contractOwner\n    */\n    constructor\n                                (\n                                ) \n                                public \n    {\n        contractOwner = msg.sender;\n    }\n\n    /********************************************************************************************/\n    /*                                       FUNCTION MODIFIERS                                 */\n    /********************************************************************************************/\n\n    // Modifiers help avoid duplication of code. They are typically used to validate something\n    // before a function is allowed to be executed.\n\n    /**\n    * @dev Modifier that requires the \"operational\" boolean variable to be \"true\"\n    *      This is used on all state changing functions to pause the contract in \n    *      the event there is an issue that needs to be fixed\n    */\n    modifier requireIsOperational() \n    {\n        require(operational, \"Contract is currently not operational\");\n        _;  // All modifiers require an \"_\" which indicates where the function body will be added\n    }\n\n    /**\n    * @dev Modifier that requires the \"ContractOwner\" account to be the function caller\n    */\n    modifier requireContractOwner()\n    {\n        require(msg.sender == contractOwner, \"Caller is not contract owner\");\n        _;\n    }\n\n    /********************************************************************************************/\n    /*                                       UTILITY FUNCTIONS                                  */\n    /********************************************************************************************/\n\n    /**\n    * @dev Get operating status of contract\n    *\n    * @return A bool that is the current operating status\n    */      \n    function isOperational() \n                            public \n                            view \n                            returns(bool) \n    {\n        return operational;\n    }\n\n\n    /**\n    * @dev Sets contract operations on/off\n    *\n    * When operational mode is disabled, all write transactions except for this one will fail\n    */    \n    function setOperatingStatus\n                            (\n                                bool mode\n                            ) \n                            external\n                            requireContractOwner \n    {\n        operational = mode;\n    }\n\n    /********************************************************************************************/\n    /*                                     SMART CONTRACT FUNCTIONS                             */\n    /********************************************************************************************/\n\n   /**\n    * @dev Add an airline to the registration queue\n    *      Can only be called from FlightSuretyApp contract\n    *\n    */   \n    function registerAirline\n                            (   \n                            )\n                            external\n                            pure\n    {\n    }\n\n\n   /**\n    * @dev Buy insurance for a flight\n    *\n    */   \n    function buy\n                            (                             \n                            )\n                            external\n                            payable\n    {\n\n    }\n\n    /**\n     *  @dev Credits payouts to insurees\n    */\n    function creditInsurees\n                                (\n                                )\n                                external\n                                pure\n    {\n    }\n    \n\n    /**\n     *  @dev Transfers eligible payout funds to insuree\n     *\n    */\n    function pay\n                            (\n                            )\n                            external\n                            pure\n    {\n    }\n\n   /**\n    * @dev Initial funding for the insurance. Unless there are too many delayed flights\n    *      resulting in insurance payouts, the contract should be self-sustaining\n    *\n    */   \n    function fund\n                            (   \n                            )\n                            public\n                            payable\n    {\n    }\n\n    function getFlightKey\n                        (\n                            address airline,\n                            string memory flight,\n                            uint256 timestamp\n                        )\n                        pure\n                        internal\n                        returns(bytes32) \n    {\n        return keccak256(abi.encodePacked(airline, flight, timestamp));\n    }\n\n    /**\n    * @dev Fallback function for funding smart contract.\n    *\n    */\n    // function() \n    //                         external \n    //                         payable\n    // {\n    //     fund();\n    // }\n\n\n}\n\n",
  "sourcePath": "/workspaces/flight_surety_dapp/app/contracts/FlightSuretyData.sol",
  "ast": {
    "absolutePath": "project:/contracts/FlightSuretyData.sol",
    "exportedSymbols": {
      "FlightSuretyData": [
        1280
      ],
      "SafeMath": [
        311
      ]
    },
    "id": 1281,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1169,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1170,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1281,
        "sourceUnit": 312,
        "src": "26:57:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FlightSuretyData",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1280,
        "linearizedBaseContracts": [
          1280
        ],
        "name": "FlightSuretyData",
        "nameLocation": "94:16:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1173,
            "libraryName": {
              "id": 1171,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 311,
              "src": "123:8:2"
            },
            "nodeType": "UsingForDirective",
            "src": "117:27:2",
            "typeName": {
              "id": 1172,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "136:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1175,
            "mutability": "mutable",
            "name": "contractOwner",
            "nameLocation": "464:13:2",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "448:29:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1174,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "448:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1178,
            "mutability": "mutable",
            "name": "operational",
            "nameLocation": "568:11:2",
            "nodeType": "VariableDeclaration",
            "scope": 1280,
            "src": "555:31:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1176,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "555:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 1177,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "582:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1187,
              "nodeType": "Block",
              "src": "1206:43:2",
              "statements": [
                {
                  "expression": {
                    "id": 1185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1182,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1175,
                      "src": "1216:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1183,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1232:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1232:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1216:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1186,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:26:2"
                }
              ]
            },
            "documentation": {
              "id": 1179,
              "nodeType": "StructuredDocumentation",
              "src": "988:88:2",
              "text": " @dev Constructor\n      The deploying account becomes contractOwner"
            },
            "id": 1188,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:35:2"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1206:0:2"
            },
            "scope": 1280,
            "src": "1081:168:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1197,
              "nodeType": "Block",
              "src": "1979:176:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1192,
                        "name": "operational",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "1997:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e74726163742069732063757272656e746c79206e6f74206f7065726174696f6e616c",
                        "id": 1193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2010:39:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        },
                        "value": "Contract is currently not operational"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        }
                      ],
                      "id": 1191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1989:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1989:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1195,
                  "nodeType": "ExpressionStatement",
                  "src": "1989:61:2"
                },
                {
                  "id": 1196,
                  "nodeType": "PlaceholderStatement",
                  "src": "2060:1:2"
                }
              ]
            },
            "documentation": {
              "id": 1189,
              "nodeType": "StructuredDocumentation",
              "src": "1701:236:2",
              "text": " @dev Modifier that requires the \"operational\" boolean variable to be \"true\"\n      This is used on all state changing functions to pause the contract in \n      the event there is an issue that needs to be fixed"
            },
            "id": 1198,
            "name": "requireIsOperational",
            "nameLocation": "1951:20:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:2:2"
            },
            "src": "1942:213:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1210,
              "nodeType": "Block",
              "src": "2300:96:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1202,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2318:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2318:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1204,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1175,
                          "src": "2332:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2318:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420636f6e7472616374206f776e6572",
                        "id": 1206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2347:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        },
                        "value": "Caller is not contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        }
                      ],
                      "id": 1201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2310:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2310:68:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1208,
                  "nodeType": "ExpressionStatement",
                  "src": "2310:68:2"
                },
                {
                  "id": 1209,
                  "nodeType": "PlaceholderStatement",
                  "src": "2388:1:2"
                }
              ]
            },
            "documentation": {
              "id": 1199,
              "nodeType": "StructuredDocumentation",
              "src": "2161:98:2",
              "text": " @dev Modifier that requires the \"ContractOwner\" account to be the function caller"
            },
            "id": 1211,
            "name": "requireContractOwner",
            "nameLocation": "2273:20:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2293:2:2"
            },
            "src": "2264:132:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1219,
              "nodeType": "Block",
              "src": "2972:35:2",
              "statements": [
                {
                  "expression": {
                    "id": 1217,
                    "name": "operational",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1178,
                    "src": "2989:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1216,
                  "id": 1218,
                  "nodeType": "Return",
                  "src": "2982:18:2"
                }
              ]
            },
            "documentation": {
              "id": 1212,
              "nodeType": "StructuredDocumentation",
              "src": "2700:118:2",
              "text": " @dev Get operating status of contract\n @return A bool that is the current operating status"
            },
            "functionSelector": "cd905dff",
            "id": 1220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperational",
            "nameLocation": "2838:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2851:2:2"
            },
            "returnParameters": {
              "id": 1216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1215,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "2961:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1214,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2961:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2960:6:2"
            },
            "scope": 1280,
            "src": "2829:178:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1232,
              "nodeType": "Block",
              "src": "3398:35:2",
              "statements": [
                {
                  "expression": {
                    "id": 1230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1228,
                      "name": "operational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1178,
                      "src": "3408:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1229,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "3422:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3408:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1231,
                  "nodeType": "ExpressionStatement",
                  "src": "3408:18:2"
                }
              ]
            },
            "documentation": {
              "id": 1221,
              "nodeType": "StructuredDocumentation",
              "src": "3014:153:2",
              "text": " @dev Sets contract operations on/off\n When operational mode is disabled, all write transactions except for this one will fail"
            },
            "functionSelector": "110466ed",
            "id": 1233,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1226,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1225,
                  "name": "requireContractOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1211,
                  "src": "3372:20:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "3372:20:2"
              }
            ],
            "name": "setOperatingStatus",
            "nameLocation": "3185:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "mode",
                  "nameLocation": "3271:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1233,
                  "src": "3266:9:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3232:73:2"
            },
            "returnParameters": {
              "id": 1227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3398:0:2"
            },
            "scope": 1280,
            "src": "3176:257:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1237,
              "nodeType": "Block",
              "src": "4034:7:2",
              "statements": []
            },
            "documentation": {
              "id": 1234,
              "nodeType": "StructuredDocumentation",
              "src": "3736:128:2",
              "text": " @dev Add an airline to the registration queue\n      Can only be called from FlightSuretyApp contract"
            },
            "functionSelector": "63e29a3f",
            "id": 1238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAirline",
            "nameLocation": "3881:15:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3925:34:2"
            },
            "returnParameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4034:0:2"
            },
            "scope": 1280,
            "src": "3872:169:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1242,
              "nodeType": "Block",
              "src": "4288:8:2",
              "statements": []
            },
            "documentation": {
              "id": 1239,
              "nodeType": "StructuredDocumentation",
              "src": "4047:54:2",
              "text": " @dev Buy insurance for a flight"
            },
            "functionSelector": "a6f2ae3a",
            "id": 1243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nameLocation": "4118:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4150:60:2"
            },
            "returnParameters": {
              "id": 1241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4288:0:2"
            },
            "scope": 1280,
            "src": "4109:187:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1247,
              "nodeType": "Block",
              "src": "4532:7:2",
              "statements": []
            },
            "documentation": {
              "id": 1244,
              "nodeType": "StructuredDocumentation",
              "src": "4302:51:2",
              "text": "  @dev Credits payouts to insurees"
            },
            "functionSelector": "36cee484",
            "id": 1248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creditInsurees",
            "nameLocation": "4367:14:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1245,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4414:35:2"
            },
            "returnParameters": {
              "id": 1246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4532:0:2"
            },
            "scope": 1280,
            "src": "4358:181:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1252,
              "nodeType": "Block",
              "src": "4775:7:2",
              "statements": []
            },
            "documentation": {
              "id": 1249,
              "nodeType": "StructuredDocumentation",
              "src": "4550:73:2",
              "text": "  @dev Transfers eligible payout funds to insuree"
            },
            "functionSelector": "1b9265b8",
            "id": 1253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nameLocation": "4637:3:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4669:31:2"
            },
            "returnParameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4775:0:2"
            },
            "scope": 1280,
            "src": "4628:154:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1257,
              "nodeType": "Block",
              "src": "5133:7:2",
              "statements": []
            },
            "documentation": {
              "id": 1254,
              "nodeType": "StructuredDocumentation",
              "src": "4787:186:2",
              "text": " @dev Initial funding for the insurance. Unless there are too many delayed flights\n      resulting in insurance payouts, the contract should be self-sustaining"
            },
            "functionSelector": "b60d4288",
            "id": 1258,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nameLocation": "4990:4:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5023:34:2"
            },
            "returnParameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5133:0:2"
            },
            "scope": 1280,
            "src": "4981:159:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "5469:79:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1272,
                            "name": "airline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "5513:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1273,
                            "name": "flight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1262,
                            "src": "5522:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "id": 1274,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "5530:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1270,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "5496:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "5496:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5496:44:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1269,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "5486:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5486:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 1268,
                  "id": 1277,
                  "nodeType": "Return",
                  "src": "5479:62:2"
                }
              ]
            },
            "id": 1279,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlightKey",
            "nameLocation": "5155:12:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1260,
                  "mutability": "mutable",
                  "name": "airline",
                  "nameLocation": "5230:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5222:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5222:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1262,
                  "mutability": "mutable",
                  "name": "flight",
                  "nameLocation": "5281:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5267:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1261,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5267:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1264,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "5325:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5317:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5317:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5192:168:2"
            },
            "returnParameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "5455:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5455:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5454:9:2"
            },
            "scope": 1280,
            "src": "5146:402:2",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1281,
        "src": "85:5682:2",
        "usedErrors": []
      }
    ],
    "src": "0:5769:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-08-02T14:44:46.331Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "buy()": {
        "details": "Buy insurance for a flight"
      },
      "constructor": {
        "details": "Constructor      The deploying account becomes contractOwner"
      },
      "creditInsurees()": {
        "details": "Credits payouts to insurees"
      },
      "fund()": {
        "details": "Initial funding for the insurance. Unless there are too many delayed flights      resulting in insurance payouts, the contract should be self-sustaining"
      },
      "isOperational()": {
        "details": "Get operating status of contract",
        "returns": {
          "_0": "A bool that is the current operating status"
        }
      },
      "pay()": {
        "details": "Transfers eligible payout funds to insuree"
      },
      "registerAirline()": {
        "details": "Add an airline to the registration queue      Can only be called from FlightSuretyApp contract"
      },
      "setOperatingStatus(bool)": {
        "details": "Sets contract operations on/off When operational mode is disabled, all write transactions except for this one will fail"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}